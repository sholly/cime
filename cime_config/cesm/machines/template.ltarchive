#! /usr/bin/env perl
use POSIX qw(strftime);
use File::Path;
use File::Copy;
use File::Spec;
use File::Basename;
use XML::LibXML;
#------------------------------------------------------------------------------
# Batch system directives
#------------------------------------------------------------------------------
{{ batchdirectives }}

if(defined $ENV{'PBS_O_WORKDIR'})
{
    chdir $ENV{'PBS_O_WORKDIR'};
}

my $scriptname = $0;
my %config;
my $caseroot = `./xmlquery -value CASEROOT`;
my $cimeroot = `./xmlquery -value CIMEROOT`;
chdir $caseroot;
my $perl5lib = "$cimeroot/utils/perl5lib";
push(@INC, $perl5lib);
require Config::SetupTools;
require Batch::BatchUtils;
use Cwd;
require Log::Log4perl;

my $level = Log::Log4perl::Level::to_priority("DEBUG");
Log::Log4perl->easy_init({level=>$level,
                          layout=>'%m%n'});

my $logger = Log::Log4perl::get_logger();

#------------------------------------------------------------------------------
# PE Layout Documentation:
#------------------------------------------------------------------------------
{{ pedocumentation }}

# -------------------------------------------------------------------------
# global data needed by the script, stuff like the max number of threads,
# -------------------------------------------------------------------------

sub main
{
    $ENV{'maxthrds'} = 1;

    # First, get the configuration from every xml file.
    %config = SetupTools::getAllResolved();
    
    
    # Change to the case root
    chdir($config{'CASEROOT'});
    my $testlog = "$config{CASEROOT}/TestStatus.log";
    if(-e $testlog)
    {
        open(TL, ">>$testlog");
        print TL "lt_archive starting\n";
        close(TL);
    }
    $logger->info("lt_archive starting");
    
    qx($config{'BATCHSUBMIT'} $config{'CASEROOT'}/Tools/lt_archive.sh {{ lt_archive_args }} >> ltArchiveStatus 2>&1);
    if(-e $testlog)
    {
        open(TL, ">>$testlog");
        print TL "lt_archive complete\n"; 
        close(TL);
    }
    $logger->info("lt_archive complete\n");
    resubmitCheck();
}

sub resubmitCheck()
{
    if($config{RESUBMIT} > 0)
    {
        my $submitscript = "$config{CASEROOT}/$config{CASE}.submit";
        my $cwd = getcwd;
        chdir $config{CASEROOT};
        my $resubmitcomand = "$submitscript -resubmit -scriptname $config{'CASE'}.lt_archive";
        $logger->debug(" running resubmit check $resubmitcommand");
        if(-e $testlog)
        {
            open(TL, ">>$testlog");
            print TL "lt_archive complete\n"; 
            close(TL);
        }
        qx($resubmitcommand);
        if($?) { $logger->warn("could not run CESM submit script, $! $?") ; }            
        chdir $cwd;
    }
}
main(@ARGV) unless caller;
